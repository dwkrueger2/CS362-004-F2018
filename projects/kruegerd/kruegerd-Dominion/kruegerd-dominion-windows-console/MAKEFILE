CFLAGS= -Wall -fpic -coverage -lm -std=c99

rngs.o: ../../dominion/rngs.h ../../dominion/rngs.c
	gcc -c ../../dominion/rngs.c -g  $(CFLAGS)

dominion.o: ../../dominion/dominion.h ../../dominion/dominion.c rngs.o
	gcc -c ../../dominion/dominion.c -g  $(CFLAGS)

playdom: dominion.o ../../dominion/playdom.c
	gcc -o ../../dominion/playdom ../../dominion/playdom.c -g ../../dominion/dominion.o ../../dominion/rngs.o $(CFLAGS)

#To run playdom you need to entere: ./playdom <any integer number> like ./playdom 10*/
#testDrawCard: testDrawCard.c dominion.o rngs.o
#	gcc  -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

#badTestDrawCard: badTestDrawCard.c dominion.o rngs.o
#	gcc -o badTestDrawCard -g  badTestDrawCard.c dominion.o rngs.o $(CFLAGS)

#testBuyCard: testDrawCard.c dominion.o rngs.o
#	gcc -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

#testAll: dominion.o testSuite.c
#	gcc -o testSuite testSuite.c -g  dominion.o rngs.o $(CFLAGS)

#interface.o: interface.h interface.c
#	gcc -c interface.c -g  $(CFLAGS)

#runtests: testDrawCard 
#	./testDrawCard &> unittestresult.out
#	gcov dominion.c >> unittestresult.out
#	cat dominion.c.gcov >> unittestresult.out


player: ../../dominion/player.c ../../dominion/interface.o
	gcc -o ../../dominion/player ../../dominion/player.c -g  ../../dominion/dominion.o ../../dominion/rngs.o ../../dominion/interface.o $(CFLAGS)

all: playdom player 

clean:
	rm -f *.o ../../dominion/playdom.exe ../../dominion/playdom ../../dominion/player ../../dominion/player.exe  ../../dominion/*.gcov ../../dominion/*.gcda ../../dominion/*.gcno ../../dominion/*.so ../../dominion/*.out ../../dominion/testDrawCard ../../dominion/testDrawCard.exe
